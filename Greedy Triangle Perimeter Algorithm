#include <iostream>
#include <vector>

using namespace std;
vector<int> maximum_triangle(vector<int> lines) {
    int max_perimeter = 0; // O(1)
    vector<int> max_triangle; // O(1)
    for (int i = 0; i < lines.size(); i++) { // O(n)
        for (int j = i+1; j < lines.size(); j++) { // O(n)
            for (int k = j+1; k < lines.size(); k++) { // O(n)
                if (lines[i] + lines[j] > lines[k] && lines[i] + lines[k] > lines[j] && lines[j] + lines[k] > lines[i]) { // O(1)
                    int perimeter = lines[i] + lines[j] + lines[k]; // O(1)
                    if (perimeter > max_perimeter) { // O(1)
                        max_perimeter = perimeter; // O(1)
                        max_triangle = {lines[i], lines[j], lines[k]}; // O(1)
                    }
                }
            }
        }
    }
    return max_triangle; // O(1)
}

int main() {
    vector<int> lines = {3, 4, 5, 6, 7, 8}; // O(n)
    vector<int> max_triangle = maximum_triangle(lines); // O(n^3)
    cout << "Maximum triangle: "; // O(1)
    for (int side : max_triangle) { // O(n)
        cout << side << " "; // O(1)
    }
    return 0; // O(1)
}
